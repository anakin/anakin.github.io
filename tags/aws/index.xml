<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>aws on Anakin- 奔向NB的生活</title>
    <link>http://anakin.github.io/tags/aws/</link>
    <description>Recent content in aws on Anakin- 奔向NB的生活</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 08 Jun 2021 17:06:12 +0800</lastBuildDate><atom:link href="http://anakin.github.io/tags/aws/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Create AWS Vpc and Ec2 via Terraform</title>
      <link>http://anakin.github.io/post/terraform-create-vpc-ec2/</link>
      <pubDate>Tue, 08 Jun 2021 17:06:12 +0800</pubDate>
      
      <guid>http://anakin.github.io/post/terraform-create-vpc-ec2/</guid>
      <description>What we will do  Create new VPC Create an Internet Gateway and a NAT gateway Define subnets Create security group Create EC2 instance Integration with gitlab CI  Define terraform file We will create few .tf files:
 backend.tf for integration with gitlab CI, we need save state file on AWS S3 bucket, otherwise Terraform will create resources every time we run CI pipeline.  terraform { backend &amp;quot;s3&amp;quot; { key = &amp;quot;terraform-pipeline/terraform.</description>
    </item>
    
    <item>
      <title>Using Aws Documentdb With Golang</title>
      <link>http://anakin.github.io/post/using-aws-documentdb-with-golang/</link>
      <pubDate>Wed, 26 May 2021 15:23:15 +0800</pubDate>
      
      <guid>http://anakin.github.io/post/using-aws-documentdb-with-golang/</guid>
      <description>Background AWS Document DB是基本兼容Mongo DB的AWS服务，Mongo DB是比较流行的非结构化文档数据库。使用Golang操作Document DB的方法</description>
    </item>
    
    <item>
      <title>How to install mysql client on AWS ECS task</title>
      <link>http://anakin.github.io/post/mysql-client-on-ecs/</link>
      <pubDate>Mon, 17 May 2021 13:12:45 +0800</pubDate>
      
      <guid>http://anakin.github.io/post/mysql-client-on-ecs/</guid>
      <description>If we need to install MySQL client on an AWS ECS task, Here is the steps:
 install wget  apt install wget install MySQL client  wget [https://dev.mysql.com/get/mysql-apt-config_0.8.16-1_all.deb](https://dev.mysql.com/get/mysql-apt-config_0.8.16-1_all.deb) apt install lsb-release gnupg -y dpkg -i mysql-apt-config_0.8.16-1_all.deb apt update apt install mysql-client -y when connect to MySQL server add param:  --ssl-mode=DISABLED </description>
    </item>
    
  </channel>
</rss>
